apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: {{ .hostname }}
  labels:
    app: {{ .hostname }}
spec:
  running: true
  dataVolumeTemplates:
    - apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        name: {{ .hostname }}
      spec:
        sourceRef:
          kind: DataSource
          name: fedora
          namespace: openshift-virtualization-os-images
        storage:
          resources:
            requests:
              storage: 30Gi
  template:
    metadata:
      labels:
        kubevirt.io/domain: {{ .hostname }}
        kubevirt.io/size: small
        app: {{ .hostname }}
    spec:
      architecture: amd64
      domain:
        cpu:
          cores: 1
        devices:
          disks:
            - disk:
                bus: virtio
              name: rootdisk
            - disk:
                bus: virtio
              name: cloudinitdisk
          interfaces:
            - masquerade: {}
              model: virtio
              name: default
          rng: {}
        features:
          acpi: {}
          smm:
            enabled: true
        firmware:
          bootloader:
            efi: {}
        memory:
          guest: 384Mi
      networks:
        - name: default
          pod: {}
      volumes:
        - dataVolume:
            name: {{ .hostname }}
          name: rootdisk
        - cloudInitNoCloud:
            userData: |
              #cloud-config
              hostname: {{ .hostname }}
              user: fedora
              password: {{ .password }}
              chpasswd: { expire: False }
              runcmd:
                - ["/bin/bash", "-c", "curl -L -o /tmp/setup.sh https://raw.githubusercontent.com/toaraki/rhcharcard2025/main/setup.sh && /bin/bash /tmp/setup.sh"]
          name: cloudinitdisk
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .hostname }}
spec:
  selector:
    app: {{ .hostname }}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ .hostname }}
spec:
  to:
    kind: Service
    name: {{ .hostname }}
  port:
    targetPort: 3000
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect # HTTPトラフィックをHTTPSにリダイレクト
